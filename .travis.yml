# .travis.yml

# Building, testing and deployment on OS X and Linux

# Reference: https://docs.travis-ci.com/user/customizing-the-build

language: cpp
sudo: required

os:
  - osx
  - linux

# Build on Mojave
osx_image: xcode10.2

services:
  - docker

cache:
  directories:
    - $HOME/docker-images

install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    then
      ./.travis/build-macos
    fi

before_script:
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]] && ((! [[ -f $HOME/docker-images/images.tar ]]) || [[ "$TRAVIS_EVENT_TYPE" == "cron" ]])
    then
      echo "Building Docker images"
      time docker build -t yubikey-manager-qt-ci-base docker/bionic-base && \
      time docker build -t bionic-ci docker/bionic-ci && \
      time docker build -t bionic-deb docker/bionic-deb && \
      time docker build -t xenial-appimage docker/xenial-appimage && \
      mkdir -p $HOME/docker-images && \
      rm -f $HOME/docker-images/images.tar && \
      time docker save -o $HOME/docker-images/images.tar bionic-ci bionic-deb xenial-appimage
    else
      echo "Reading Docker images from file"
      if [[ -f $HOME/docker-images/images.tar ]]; then
        time docker load -i $HOME/docker-images/images.tar
      else
        echo "Image cache file $HOME/docker-images/images.tar not found"
      fi
    fi

script:
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]
    then
      time docker run --rm -v $(pwd):/sources/yubikey-manager-qt:ro bionic-ci && \
      time docker run --name bionic-deb -v $(pwd):/sources/yubikey-manager-qt:ro bionic-deb && \
      time docker run --name xenial-appimage -v $(pwd):/sources/yubikey-manager-qt:ro --privileged xenial-appimage
    fi

after_success:
  - mkdir deploy/
  # Exctract all user facing strings and create a textfile with them for deployment.
  - lupdate ykman-gui/ykman-gui.pro -ts ykman-gui.ts
  - cp ykman-gui.ts deploy/yubikey-manager-qt-$TRAVIS_BRANCH-strings.xml
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    then
      # Rename app bundle
      mv ykman-gui/ykman-gui.app ykman-gui/YubiKey\ Manager.app
      # Copy .app to deploy dir
      tar -czf yubikey-manager-qt-$TRAVIS_BRANCH.app.tar.gz -C ykman-gui YubiKey\ Manager.app
      mv yubikey-manager-qt-$TRAVIS_BRANCH.app.tar.gz deploy
      # Test ykman-cli in .app bundle
      cp ykman-cli/test.py ykman-gui/ykman-gui.app/Contents/MacOS/
      (cd ykman-gui/ykman-gui.app/Contents/MacOS && ./test.py)
    fi
  - | 
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]
    then
      id=bionic-deb
      time docker cp $id:/yubikey-manager-qt-debian-packages.tar.gz deploy/yubikey-manager-qt-$TRAVIS_BRANCH-deb.tar.gz

      id=xenial-appimage
      time docker cp $id:/yubikey-manager-qt/YubiKey_Manager-x86_64.AppImage deploy/yubikey-manager-qt-$TRAVIS_BRANCH.AppImage

      git archive --format=tar.gz -o yubikey-manager-qt-$TRAVIS_BRANCH.tar.gz --prefix yubikey-manager-qt/ $TRAVIS_BRANCH
      mv yubikey-manager-qt-$TRAVIS_BRANCH.tar.gz deploy/
    fi

deploy:
  provider: s3
  access_key_id: "$AWS_KEY_ID"
  secret_access_key: "$AWS_SECRET_KEY"
  bucket: "$AWS_BUCKET"
  skip_cleanup: true
  acl: public-read
  region: eu-west-1
  local-dir: "deploy/"
  upload-dir: "yubikey-manager-qt"
  on:
    all_branches: true
